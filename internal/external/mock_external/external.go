// Code generated by MockGen. DO NOT EDIT.
// Source: external.go
//
// Generated by this command:
//
//	mockgen -source=external.go -destination=mock_external/external.go -package=mock_external
//

// Package mock_external is a generated GoMock package.
package mock_external

import (
	external "boilerplate-go/internal/external"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIExternal is a mock of IExternal interface.
type MockIExternal struct {
	ctrl     *gomock.Controller
	recorder *MockIExternalMockRecorder
	isgomock struct{}
}

// MockIExternalMockRecorder is the mock recorder for MockIExternal.
type MockIExternalMockRecorder struct {
	mock *MockIExternal
}

// NewMockIExternal creates a new mock instance.
func NewMockIExternal(ctrl *gomock.Controller) *MockIExternal {
	mock := &MockIExternal{ctrl: ctrl}
	mock.recorder = &MockIExternalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIExternal) EXPECT() *MockIExternalMockRecorder {
	return m.recorder
}

// ListUsers mocks base method.
func (m *MockIExternal) ListUsers() []external.ResponseUsers {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListUsers")
	ret0, _ := ret[0].([]external.ResponseUsers)
	return ret0
}

// ListUsers indicates an expected call of ListUsers.
func (mr *MockIExternalMockRecorder) ListUsers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListUsers", reflect.TypeOf((*MockIExternal)(nil).ListUsers))
}
